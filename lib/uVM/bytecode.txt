This describes how the byte code looks and what it does

A -> How many words in memory does the command use
B -> What command is it
C-H -> Command specific

x -> Internal machine address (x can be a register but can also be a uVM call)

         ABCDEFGH
NOP -> 0x10zzzzzz -> Does nothing :)
LDx -> 0x31xxxxxx -> Loads value from address to x
STx -> 0x32xxxxxx -> Store value from x to address
ADD -> 0x13xxxxxx -> Adds value from x to Accumulator
SUB -> 0x14xxxxxx -> Subtracts value from x to Accumulator
MUL -> 0x15xxxxxx -> Multiplies value from x to Accumulator
DIV -> 0x16xxxxxx -> Divides value from x to Accumulator
SHL -> 0x17zzzzzz -> Shifts value in Accumulator to the left
SHR -> 0x18zzzzzz -> Shifts value in Accumulator to the right
AND -> 0x19xxxxxx -> AND Accumulator and x together
OR  -> 0x1Axxxxxx -> OR Accumulator and x together
NOT -> 0x1Bxxxxxx -> NOT x
XOR -> 0x1Cxxxxxx -> XOR Accumulator and x together
MOV -> 0x5Dzzzzzz -> MOV data from address A to address B
JMP -> 0x3Ezzzzzz -> Jump to address in memory
JMZ -> 0x3Fxxxxxx -> Jump to address in memory if x is 0